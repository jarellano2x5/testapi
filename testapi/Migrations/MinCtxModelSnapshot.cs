// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using testapi.Data;

namespace testapi.Migrations
{
    [DbContext(typeof(MinCtx))]
    partial class MinCtxModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("testapi.Models.Country", b =>
                {
                    b.Property<short>("IdCountry")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acronym")
                        .IsRequired()
                        .HasColumnType("varchar(2)")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("varchar(2)")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("IdCountry");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("testapi.Models.Shop", b =>
                {
                    b.Property<int>("IdShop")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<short>("IdCountry")
                        .HasColumnType("smallint");

                    b.Property<short>("IdStatus")
                        .HasColumnType("smallint");

                    b.Property<short>("IdType")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<string>("RFC")
                        .IsRequired()
                        .HasColumnType("varchar(13)")
                        .HasMaxLength(13)
                        .IsUnicode(false);

                    b.Property<string>("TagLine")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<short?>("TipeIdType")
                        .HasColumnType("smallint");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("IdShop");

                    b.HasIndex("IdCountry");

                    b.HasIndex("IdStatus");

                    b.HasIndex("TipeIdType");

                    b.ToTable("Shop");
                });

            modelBuilder.Entity("testapi.Models.Status", b =>
                {
                    b.Property<short>("IdStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("IdStatus");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("testapi.Models.Tariff", b =>
                {
                    b.Property<short>("IdTariff")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<short>("IdCountry")
                        .HasColumnType("smallint");

                    b.Property<string>("Initial")
                        .IsRequired()
                        .HasColumnType("varchar(6)")
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("IdTariff");

                    b.HasIndex("IdCountry");

                    b.ToTable("Tariff");
                });

            modelBuilder.Entity("testapi.Models.Tipe", b =>
                {
                    b.Property<short>("IdType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("IdType");

                    b.ToTable("Tipe");
                });

            modelBuilder.Entity("testapi.Models.Shop", b =>
                {
                    b.HasOne("testapi.Models.Country", "Country")
                        .WithMany("Shops")
                        .HasForeignKey("IdCountry")
                        .HasConstraintName("FK_Shop_Country")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("testapi.Models.Status", "Status")
                        .WithMany("Shops")
                        .HasForeignKey("IdStatus")
                        .HasConstraintName("FK_Shop_Status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("testapi.Models.Tipe", "Tipe")
                        .WithMany("Shops")
                        .HasForeignKey("TipeIdType");
                });

            modelBuilder.Entity("testapi.Models.Tariff", b =>
                {
                    b.HasOne("testapi.Models.Country", "Country")
                        .WithMany("Tariffies")
                        .HasForeignKey("IdCountry")
                        .HasConstraintName("FK_Tariff_Country")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
